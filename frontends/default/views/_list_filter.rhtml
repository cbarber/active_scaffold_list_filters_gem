<% url_options = params_for(:action => :index, :escape => false).delete_if{|k,v| k == 'list_filter'}

  options = {:id => element_form_id(:action => 'list_filter'),
             :class => "as_form list_filter",
             :remote => true,
             :method => :get,
             'data-as_load' => 'form',
             'data-as_action' => 'list_filter'
           }
-%>

<%= form_tag url_options, options %>
  <%= hidden_field_tag('list_filter[input]','filter') %>
  
  <h3 id="trigger"><%=as_('Filters')%></h3>

  <div class="filter_accordion">
  		<% filter_config.filters.each do |filter| %>
  			<div class="filter_handle" title="<%=as_(filter.label)%>"><canvas width=22 height=150></canvas><!--[if IE]><div class="filter_trigger"></div><![endif]--></div>
  		<% end %>
  		
  		<% 
  		id = params[:eid] || params[:controller]
  		session_index = "as:#{id}"
  		filter_session_base = session[session_index]["list_filter"] unless session[session_index]["list_filter"].nil?		
  		filter_config.filters.each do |filter|
  				filter_session = filter_session_base[filter.filter_type] unless filter_session_base.nil?
  				filter_session = filter_session[filter.name.to_s] unless filter_session.nil?
  				filter.session = filter_session
  		%>
  			<div class="filter_body">
  				<h3><%=as_(filter.label)%></h3>
  				<%= render :partial => filter.filter_type, :locals => { :filter => filter, :filter_session => filter_session } -%>
  			</div>
  		<% end %>	
  </div>

  <%= submit_tag "Filter" -%>
  <%= link_to as_(:reset), url_for(url_options.merge(:list_filter_input => 'reset')), :class => 'as_cancel', :remote => true, :onclick => "$('#{list_filter_form_id}').up('div').remove();" %>

  <%= loading_indicator_tag(:action => :list_filter) %>
</form>

<script type="text/javascript">
  init_filter_accordions();

  // calendar date select hack so that form is auto submitted on change by defining onsubmit() (previously undefined) to map to form submission
  $('<%= options[:id] -%>').onsubmit = function() { this.request() }
</script>
